#!/usr/bin/env python3

import ncplugin
import NCrystal as NC
import numpy as np
import matplotlib.pyplot as plt

physmodel = ncplugin.PhysicsModel(A1=132.869, b1=-1.33605, A2=0.0519763, b2=-3.97314, Q0=0.0510821, sigma0=5.551)

nsample = int(1e6)#Warning consumes nsample*8 bytes of memory, so don't be silly
                  #and put to 1e10 (if such large numbers are needed, rewrite
                  #code below as loop which samples e.g. 1e6 at a time).

nbins = 180
for wl in np.arange(22,0.5,-7):
    muvals = physmodel.sampleScatMu( NC.wl2ekin(wl), nvalues=nsample )
    print(f"Average mu in {float(len(muvals)):g}: {muvals.sum()/len(muvals)} with neutron wavelength: {wl}")
    plt.hist(muvals, bins=nbins,alpha=0.5, label=f'wavelength {wl} Ã…')

#An isotropic distrigbution is constant wrt mu:
#plt.plot( [0.9,1.0],[len(muvals)/nbins]*2 ,label = 'Isotropic', color='red' )

plt.title(r'$\mu=\cos(\theta)$' + f' distribution in {float(len(muvals)):g} scattering events')
plt.legend()
plt.xlabel(r'$\mu=\cos(\theta)$')
plt.yscale('log')
plt.show()
